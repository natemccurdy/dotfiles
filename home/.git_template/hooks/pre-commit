#!/usr/bin/env ruby

require 'json'
require 'open3'
require 'rubygems'
require 'yaml'

# Cross-platform way of finding an executable in the $PATH.
# which('ruby') #=> /usr/bin/ruby
def which(cmd)
  exts = ENV['PATHEXT'] ? ENV['PATHEXT'].split(';') : ['']
  ENV['PATH'].split(File::PATH_SEPARATOR).each do |path|
    exts.each do |ext|
      exe = File.join(path, "#{cmd}#{ext}")
      return exe if File.executable?(exe)
    end
  end
  nil
end

# Takes an array where the first element is the command and the other elements are command flags.
# Returns true on cmd success.
def run(cmd)
  stdout, stderr, status = Open3.capture3(*cmd)

  if status.success?
    puts stdout unless stdout.empty?
    true
  else
    warn(stdout)
    warn(stderr)
    exit 1
  end
end

def puppet_parser_validate(file)
  if which('puppet')
    run(['puppet', 'parser', 'validate', '--storeconfigs', file])
  else
    puts 'WARNING: puppet not installed. Skipping syntax check of Puppet code.'
  end
end

# NOTE: When installing r10k, you'll probably need to install the puppet_forge gem at version 2.2.6 first.
#       Versions later than that have a dependency on semantic_puppet ~> 1.0 while r10k has a dependency on ~> 0.1.
#         gem install puppet_forge --version 2.2.6
#         gem install r10k
def r10k_puppetfile_check(file)
  if which('r10k')
    run(['r10k', 'puppetfile', 'check', file])
  else
    puts 'WARNING: r10k not installed. Skipping check of Puppetfile. Install with `gem install r10k`'
  end
end

def bash_check(file)
  if which('bash')
    run(['bash', '-n', file])
  else
    puts 'WARNING: bash not found. Skipping syntax check of shell script'
  end
end

def shell_check(file)
  if which('shellcheck')
    run(['shellcheck', file])
  else
    puts 'WARNING: shellcheck not installed. Skipping check of shell script. https://github.com/koalaman/shellcheck#installing'
  end
end

def puppet_lint(file)
  if which('puppet-lint')
    run(['puppet-lint', '--fail-on-warnings', '--log-format=%{filename} - %{KIND}:%{check} - %{message} on line %{line}', file])
  else
    puts 'WARNING: puppet-lint gem not installed. Skipping style check of Puppet code. Install with `gem install puppet-lint`'
  end
end

def puppet_epp_check(file)
  if which('puppet')
    run(['puppet', 'epp', 'validate', file])
  else
    puts 'puppet not installed. Skipping EPP template check.'
  end
end

def puppet_erb_check(file)
  if which('erb')
    erb_stdout, _status = Open3.capture2('erb', '-x', '-T', '-', file)
    ruby_stdout, status = Open3.capture2('ruby -c', stdin_data: erb_stdout)
    unless status.success?
      warn(ruby_stdout)
      exit 1
    end
  else
    puts 'erb not installed. Skipping ERB template check.'
  end
end

def yaml_check(file)
  YAML.load_file(file)
rescue StandardError => e
  warn("YAML invalid: #{e}")
  exit 1
end

def yaml_lint(file)
  if which('yamllint') # https://github.com/adrienverge/yamllint
    run(['yamllint', '-f', 'parsable', file])
  else
    puts 'yamllint not installed. Skipping YAML style check.'
  end
end

def json_check(file)
  JSON.parse(IO.read(file))
rescue StandardError => e
  warn("JSON invalid: #{e}")
  exit 1
end

def python_lint(file)
  if which('flake8')
    run(['flake8', '--append-config', "#{ENV['HOME']}/.config/flake8", file])
  else
    puts 'flake8 not installed (pip install flake8). Skipping Python style check.'
  end
end

# Go through list of files, and call an appropriate checker.
Open3.capture2('git diff --cached --name-only --diff-filter=ACM')[0].each_line do |file|
  file.chomp!
  puts "Processing #{file}"
  case file
  when /\.pp$/
    puppet_parser_validate file
    puppet_lint file
  when /\.epp$/
    puppet_epp_check file
  when /\.erb$/
    puppet_erb_check file
  when 'Puppetfile'
    r10k_puppetfile_check file
  when /\.sh$/
    bash_check file
    shell_check file
  when /(\.yaml$|\.yml$|\.eyaml$)/
    yaml_check file
    yaml_lint file
  when /\.json$/
    json_check file
  when /\.py$/
    python_lint file
  end
end
